{"version":3,"file":"accordion.mjs","sources":["../../../projects/accordion/src/lib/accordion.service.ts","../../../projects/accordion/src/lib/panel.component.ts","../../../projects/accordion/src/lib/panel.component.html","../../../projects/accordion/src/lib/accordion.component.ts","../../../projects/accordion/src/lib/accordion.module.ts","../../../projects/accordion/src/public-api.ts","../../../projects/accordion/src/accordion.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccordionService {\n\n  constructor() { }\n}\n","\nimport { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'panel',\n  templateUrl: './panel.component.html'\n})\n\nexport class PanelComponent implements OnChanges {\n\n  @Input() activate: string = \"\";\n  @Input() title: string = \"\";\n  @Output() closeOtherPanels: EventEmitter<string> = new EventEmitter();\n\n  active : boolean = false;\n\nngOnChanges(changes : SimpleChanges){\n  if(changes?.['activate']){\n    this.active = this.activate == this.title;\n  }\n}\n\n  toggle() {\n    this.active = !this.active;\n    if(this.active){\n      this.closeOtherPanels.emit(this.title);\n    }\n  }\n\n}","<div style=\"border-bottom: 1px solid #B0B0B0; padding: 8px;\" >\n\n    <div class=\"header\">\n      <p>{{title}} <a (click)=\"toggle()\" style=\"float: right;\">Toggle</a></p>\n    </div>\n  \n    <div class=\"content\" [hidden]=\"!active\">\n      <ng-content></ng-content>  \n    </div>\n  \n  </div>","import { Component, ContentChildren, OnInit, QueryList } from '@angular/core';\nimport { PanelComponent } from './panel.component';\n\n@Component({\n  selector: 'lib-accordion',\n  template: `\n<div class=\"accordion\" >\n    <ng-content></ng-content>\n  </div>\n  \n  `,\n  styles: [\n  ]\n})\nexport class AccordionComponent implements OnInit {\n\n  @ContentChildren(PanelComponent) panels: QueryList<PanelComponent> | any;\n\n  ngAfterContentInit() {\n\n    this.panels.forEach((panel: { active: boolean; }) => {panel.active = false;});\n    \n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AccordionComponent } from './accordion.component';\n\n\n\n@NgModule({\n  declarations: [\n    AccordionComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    AccordionComponent\n  ]\n})\nexport class AccordionModule { }\n","/*\n * Public API Surface of accordion\n */\n\nexport * from './lib/accordion.service';\nexport * from './lib/accordion.component';\nexport * from './lib/accordion.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}